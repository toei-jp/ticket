version: 2
jobs:
  build:
    # The primary container is an instance of the first list image listed. Your build commands run in this container.
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - run:
          name: node version
          command: |
            echo $CIRCLE_BRANCH
            node -v
      - run:
          name: npm version
          command: npm -v
      # - run:
      #     name: Update npm
      #     command: 'sudo npm install -g npm@latest'
      - run:
          name: configure npm for private modules
          command: |
            npm config set //registry.npmjs.org/:_authToken=$NPM_TOKEN
            npm whoami
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: install npm packages
          command: npm install
      - save_cache:
          key: dependency-cache-{{ checksum "package.json" }}
          paths:
            - ./node_modules
      - run:
          name: compile typescript
          command: npm run build
  test:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: run npm test
          command: npm test
      # - run:
      #     name: Generate code coverage
      #     command: './node_modules/.bin/nyc report --reporter=text-lcov'
      # - store_artifacts:
      #     path: test-results.xml
      #     prefix: tests
      # - store_artifacts:
      #     path: coverage
      #     prefix: coverage
  deploy2development:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: deploy to azure webapps development
          command: |
            git remote add development-staging ${DEPLOY_TARGET_REPOSITORY_DEVELOPMENT}
            git push development-staging $CIRCLE_BRANCH:master -f -v
  prerelease:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: deploy to azure webapps prerelease
          command: |
            git remote add prerelease ${DEPLOY_TARGET_REPOSITORY_PRERELEASE}
            git push prerelease $CIRCLE_BRANCH:master -f -v
  deploy:
    docker:
      - image: circleci/node:latest
    steps:
      - checkout
      - restore_cache:
          key: dependency-cache-{{ checksum "package.json" }}
      - run:
          name: deploy to azure webapps production
          command: |
            git remote add production-staging ${DEPLOY_TARGET_REPOSITORY_PRODUCTION}
            git push production-staging $CIRCLE_BRANCH:master -f -v
# Used for orchestrating all jobs.
workflows:
  version: 2

  build-test-deploy:
    jobs:
      - build
      - test:
          requires:
            - build
      # - deploy2development:
      #     requires:
      #       - test
      #     filters:
      #       branches:
      #         only: develop
      - prerelease:
          requires:
            - test
          filters:
            branches:
              only: /feature\/.+-alpha.+/
      - deploy:
          requires:
            - test
          filters:
            branches:
              only: master
